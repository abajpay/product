buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.0.RELEASE"
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0"

    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id 'io.spring.dependency-management' version "1.0.7.RELEASE"
    id 'com.palantir.docker' version "0.13.0"
    id 'org.springframework.boot' version "2.1.7.RELEASE"

}

group 'com.oracle.training'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}
docker {
    name "${project.group}/${bootJar.baseName}"
    copySpec.from(tasks.unpack.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])
}


dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile('com.h2database:h2')
    compile('com.graphql-java:graphql-java-tools:4.3.0')
    compile('com.graphql-java:graphql-spring-boot-starter:4.0.0')
    compile('com.graphql-java:graphiql-spring-boot-starter:4.0.0')
    compile('org.springframework.boot:spring-boot-starter')
    compile('org.apache.kafka:kafka-clients:0.11.0.0')
    compile('org.codehaus.jettison:jettison:1.2')
    compile('org.jetbrains.kotlin:kotlin-stdlib-jdk8')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation("com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0")
    testCompile group: 'junit', name: 'junit', version: '4.12'
}
dependencies {

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}